{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GiftGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","console","log","trim","length","cats","type","value","onChange","target","getGifts","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GiftGridItem","props","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"qMAiCgBA,EA9BI,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAEDC,mBAAS,IAFR,mBAE9BC,EAF8B,KAElBC,EAFkB,KAgBrC,OACI,sBAAMC,SAVW,SAACC,GAClBA,EAAEC,iBACFC,QAAQC,IAAI,UACRN,EAAWO,OAAOC,OAAS,IAC3BV,GAAc,SAAAW,GAAI,OAAKT,GAAL,mBAAoBS,OACtCR,EAAc,MAKlB,SACI,uBACIS,KAAK,OACLC,MAAQX,EACRY,SAjBc,SAAET,GACxBF,EAAcE,EAAEU,OAAOF,a,+BCPlBG,EAAQ,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACdC,EADc,iDACkCC,UAAUH,GAD5C,8DAEDI,MAAOF,GAFN,cAEdG,EAFc,gBAGCA,EAAKC,OAHN,uBAGbC,EAHa,EAGbA,KAEDC,EAAQD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC3B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATtB,kBAYbM,GAZa,4CAAH,sDCYNO,EAXM,SAAEC,GAEnB,OADA1B,QAAQC,IAAIyB,GAER,sBAAKC,UAAU,yCAAf,UAEI,qBAAKC,IAAMF,EAAMd,IAAMiB,IAAMH,EAAMJ,QACnC,kCAAMI,EAAMJ,MAAZ,WCJCQ,EAAU,SAAC,GAAkB,IAAhBpB,EAAe,EAAfA,SAAe,ECAb,SAAEA,GAAe,IAAD,EAEdhB,mBAAS,CAC/BuB,KAAM,GACNc,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAuBxC,OAhBAC,qBAAW,WACPzB,EAAUC,GACTyB,MAAM,SAAAC,GACHpC,QAAQC,IAAImC,GACZH,EAAS,CACLhB,KAAMmB,EACNL,SAAS,SAGlB,CAAErB,IAOEsB,EDrBmBK,CAAc3B,GAAhCO,EAF6B,EAE7BA,KAAMc,EAFuB,EAEvBA,QAId,OAFA/B,QAAQC,IAAI8B,GAGR,qCACA,qBAAIJ,UAAU,oCAAd,cAAsDjB,EAAtD,OAEEqB,GAAW,mBAAGJ,UAAU,mCAAb,qBAEb,qBAAKA,UAAU,YAAf,SAEQV,EAAKE,KAAK,SAAAC,GAAG,OACT,cAAC,EAAD,eAEIA,GADEA,EAAIC,aEyBfiB,EAxCM,WAAM,MAIa5C,mBAAS,CAAE,KAJxB,mBAIhB6C,EAJgB,KAIJ9C,EAJI,KAWvB,OACI,qCACI,8CAEA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAEA,6BAaQ8C,EAAWpB,KAAK,SAAAT,GAAQ,OAAK,cAAC,EAAD,CAEzBA,SAAaA,GADNA,Y,MC/B/B8B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.864d779b.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = ( e ) => {\r\n        setInputValue(e.target.value)\r\n    }\r\n    const handleSubmit = (e)=>{\r\n        e.preventDefault();\r\n        console.log('submit'); \r\n        if (inputValue.trim().length > 2 ) {\r\n            setCategories(cats => [inputValue, ...cats ]);\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit } >\r\n            <input \r\n                type=\"text\"\r\n                value={ inputValue }\r\n                onChange={ handleInputChange }\r\n            />\r\n            \r\n        </form>\r\n    )\r\n}\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n export default AddCategory\r\n","\r\nexport const getGifts = async( category ) =>{\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=3&api_key=9XdfacpJfFJFcMuXW7EkwEhydj1mX2VI`;\r\n    const resp = await fetch( url );\r\n    const {data} = await resp.json();\r\n\r\n    const gifs =  data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n    return gifs\r\n}\r\n\r\n// getGifts();\r\n","import React from 'react'\r\n\r\nconst GiftGridItem = ( props ) => {\r\n    console.log(props);\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            {/* {props.title} */}\r\n            <img src={ props.url } alt={ props.title }/>\r\n            <p> { props.title } </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GiftGridItem\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport GiftGridItem from './GiftGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    const { data, loading } = useFetchGifs( category )\r\n\r\n    console.log(loading);\r\n\r\n    return (\r\n        <>\r\n        <h3 className='animate__animated animate__fadeIn' > { category } </h3>\r\n\r\n        { loading && <p className='animate__animated animate__flash'>loading</p> }\r\n\r\n        <div className=\"card-grid\">\r\n            {\r\n                data.map( img => (\r\n                    <GiftGridItem \r\n                    key={ img.id } \r\n                    {...img} /> )\r\n                    )\r\n            }\r\n        </div>\r\n        </>\r\n    )\r\n}","import { useEffect, useState } from 'react'\r\nimport {getGifts} from '../helpers/getGifs'\r\n\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    })\r\n\r\n    useEffect( () => {\r\n        getGifts( category )\r\n        .then( imgs => {\r\n            console.log(imgs);\r\n            setState({\r\n                data: imgs,\r\n                loading: false\r\n            })            \r\n        } )\r\n    }, [ category ])\r\n\r\n    // setTimeout( () => {\r\n\r\n    // }, 3000 )\r\n    \r\n\r\n    return state\r\n\r\n}\r\n","import React, { useState } from 'react'\r\nimport AddCategory from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    // const categories = [ 'One Punch', 'Samurai X', 'Dragon Ball' ];\r\n    // const [categories, setCategories] = useState([ 'One Punch', 'Samurai X', 'Dragon Ball' ]);\r\n    const [categories, setCategories] = useState([ '']);\r\n\r\n    /* const handleAdd = () => {\r\n        setCategories( [...categories, 'Hunter'])\r\n    }\r\n */\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            {/* <AddCategory setCategories={ setCategories } /> */}\r\n            <AddCategory setCategories={ setCategories } />\r\n            <hr />\r\n            {/* <button onClick={ handleAdd } >Agregar</button> */}\r\n            <ol>\r\n                {/* {\r\n                    categories.map( category =>{\r\n                        return <li key={ category } > { category } </li>\r\n                    } )\r\n                }\r\n            <ol> */}\r\n                {/* {\r\n                    categories.map( category => \r\n                        <li key={ category } > { category } </li> \r\n                        )\r\n                    } */}\r\n                {\r\n                    categories.map( category => (<GifGrid \r\n                        key= { category }\r\n                        category = { category } />) )\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}